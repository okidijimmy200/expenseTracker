Lecture 1:
Visualizing expense data over time::
--Aside from allowing users to keep logs of their expenses, the MERN Expense Tracker
application will process the collected expense data to give users insights into their
spending habits over time. We will implement simple data aggregation and
visualization features to demonstrate how the MERN stack can accommodate such
requirements in any full-stack application. To enable these features, we will utilize
MongoDB's aggregation framework and also the React-based charting and data
visualization library—Victory—by Formidable

--In the following sections, we will first add features to summarize a user's expenses in
the current month and also show how they are doing compared to previous months.
Then, we will add different Victory charts to give them a visual representation of
their spending patterns over a month, and a year, and per expense category.

Summarizing recent expenses::
--When a user signs in to their account on the application, they will see a preview of the
expenses they incurred so far in the current month. They will also see a comparison of
how much more or less they are spending in each category in comparison to the
averages from previous months. To implement these features, we will have to add
backend APIs that will run aggregation operations on the relevant expense data in the
database and return the computed results to be rendered in the frontend

Previewing expenses in the current month::
--After a user signs in to the application, we will show a preview of their current
expenses, including their total expenditure for the current month and how much they
spent on the current date and the day before.

The current month preview API::
--We will add an API to the backend that will return the preview of expenses incurred
so far in the current month.
--In the faceted aggregation operation result, each pipeline has its
own field in the output document where the results are stored as an
array of documents.

Lecture 2:
Rendering the preview of current expenses::
--To retrieve the expense totals and render these in the view, we can call the current
month preview API either in a useEffect hook or when a button is clicked on.

Lecture 3:
Tracking current expenses by category::
--we will give the user an overview of how much they are currently spending in each expense category in comparison to previous averages. For each
category, we will display the monthly average based on previous expense data, show the total spent so far in the current month, and show the difference to indicate
whether they are spending extra or are saving money in the current month.

--To implement this feature, we need to add a backend API that will process the
existing expense data to return the monthly average along with the total spent in the
current month for each category, so it can be rendered in a React component. In the
following sections, we will look at the implementation and integration of this API and
frontend view to complete this feature to track expenses by category.

The current expenses by category API::
--We will add an API to the backend that will return the average monthly expenses and
the total spent in the current month for each expense category. To implement this
API.

Rendering an overview of expenses per category::
--Besides informing the user of how much they are spending currently, we can give
them an idea of how they are doing in comparison to previous expenditures. We can
tell them whether they are spending more or saving money in the current month for
each category.

